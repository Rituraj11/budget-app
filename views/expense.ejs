<head>
    <title>Expense</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" integrity="sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g==" crossorigin="anonymous" referrerpolicy="no-referrer" />

    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.12.0/css/jquery.dataTables.css">
  
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.12.0/js/jquery.dataTables.js"></script>
    <Style>
        td:first-child + td{
            color: rgb(41, 206, 41);
        }
        td:first-child + td:before {
            content: "+ ₹ ";
            color: rgb(41, 206, 41);;
        }
        
        td:first-child + td + td {
            color: red;
        }
        td:first-child + td + td:before {
            content: "- ₹ ";
        }
    </Style>
</head>
<body>
    <!-- <h1>Expense page</h1> -->
    <nav class="navbar navbar-light bg-light">
        <span id="budget-name" class="navbar-brand mb-0 h1"><p>Budget name</p></span>
        <span class="navbar-text">
            Profile
            <span id="user_name"></span>
        </span>
    </nav>
    <div>
        <div class="container" style="margin-top: 15px;">
        <div style="display: flex; justify-content: space-between;">
            <div style="display: flex;">
                <div>
                    <button type="button" class="btn btn-success" data-toggle="modal" data-target="#addIncomeModal">
                        <i class="fa fa-plus"></i>
                         &nbsp;Add Income
                    </button>
                </div>
                <div style="margin-left: 15px;">
                    <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#addExpenseModal">
                        <i class="fa fa-plus"></i>
                         &nbsp;Add Expense
                    </button>
                </div>
            </div>

            <div id="share-section">
                <!-- <input type="text" value="Hello World" id="myInput" disabled>
                <button onclick="">Copy text</button> -->
            </div>
        </div>
        <a href="/dashboard" style="float: right;">Back</a>
        </div>
        <div class="container" style="margin-top: 30px;">
            <div class="row">
                <div class="col-md-12">
                    <div id="expense-table table-responsive">
                        <!-- <h4>Data table</h4> -->
                        <table class="table" id="budgetTable">
                            <thead>
                            <tr>
                                <!-- <th scope="col">Id</th> -->
                                <th scope="col">Expense Name</th>
                                <th scope="col">Income</th>
                                <th scope="col">Expense</th>
                                <th scope="col">Spend/Income Date</th>
                                <!-- <th scope="col">Action</th> -->
                            </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div id="budget-calc-area" style="margin: 30px 60px;">
            <div id="budget-total"></div>
            <div id="budget-income-total"></div>
            <div id="budget-expense-total"></div>
            <hr>
            <div id="expenditure-amount"></div>  
        </div>
    </div>


    <!-- Add Modal -->
    <div class="modal fade" id="addIncomeModal" tabindex="-1" role="dialog" aria-labelledby="addIncomeModal" aria-hidden="true">
        <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
            <h5 class="modal-title" id="addIncomeModal">Add Income</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                      <label for="formGroupBudgetNameInput">Income Name</label>
                      <input type="text" class="form-control" id="formGroupIncomeNameInput" placeholder="Enter income name">
                    </div>
                    <div class="form-group">
                      <label for="formGroupBudgetAmountInput">Income Amount (in ₹)</label>
                      <input type="number" class="form-control" id="formGroupIncomeAmountInput" placeholder="Enter amount (eg: 500000)">
                    </div>
                    <div class="form-group">
                        <label for="formGroupBudgetMonthInput">Spend Date</label>
                        <input type="date" class="form-control" id="formGroupIncomeDateInput" placeholder="Enter date">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary" onclick="addIncome()">Add</button>
            </div>
        </div>
        </div>
    </div>

    <!-- Add Modal -->
    <div class="modal fade" id="addExpenseModal" tabindex="-1" role="dialog" aria-labelledby="addExpenseModal" aria-hidden="true">
        <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
            <h5 class="modal-title" id="addExpenseModal">Add Expense</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                      <label for="formGroupBudgetNameInput">Expense Name</label>
                      <input type="text" class="form-control" id="formGroupExpenseNameInput" placeholder="Enter expense name">
                    </div>
                    <div class="form-group">
                      <label for="formGroupBudgetAmountInput">Budget Amount (in ₹)</label>
                      <input type="number" class="form-control" id="formGroupExpenseAmountInput" placeholder="Enter amount (eg: 500000)">
                    </div>
                    <div class="form-group">
                        <label for="formGroupBudgetMonthInput">Spend Date</label>
                        <input type="date" class="form-control" id="formGroupExpenseDateInput" placeholder="Enter date">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary" onclick="addExpense()">Add</button>
            </div>
        </div>
        </div>
    </div>

</body>
<script>
    var userData = new Object;
    var budgetData = new Object;

    let cookieTokens = document.cookie
                                .split(';')
                                .map( cookie => cookie.split('='))
                                .reduce( (accumulator, [key, value]) => 
                                ({...accumulator, [key.trim()]: decodeURIComponent(value)}), {} )

    var token = cookieTokens.jwtToken

    var paramArr = window.location.search.split('?').slice(1)[0].split('&')

    var paramsObj = paramArr.map( data => data.split('='))
            .reduce( (acc, [key, value]) => ({...acc, [key.trim()]: decodeURIComponent(value)}),{})


    console.log(paramsObj)
    var uId = paramsObj.uid      

    if(token == undefined && paramsObj.sharing == false){
        location.replace('/')
        console.log({'message': 'Access denied'})
    }

    async function getUserInfo(){
        console.log(uId)
        var requestOptions = {
            method: 'GET',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
                'auth-token': token,
                'uid': uId
            }
        };

        try{
            let response = await fetch("http://localhost:8000/api/user/me", requestOptions)
            var result = await response.json()

            userData = {...result}

            const html = `<h4>Hi ..${userData.name}</h4>`

            document.querySelector('#user_name').innerHTML = html

            var urlParam = window.location.search.split('?').slice(1)

            if(urlParam.length == 0){
                location.replace('/')
                console.log({'message': 'Access denied'})
            }

            budgetIdData = urlParam.map( params => params.split('='))
                        .reduce((accumulator, [key, value]) => 
                                ({...accumulator, [key.trim()]: decodeURIComponent(value)}), {})
            
            var budgetheaders = {
                method: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                    'auth-token': token,
                    'uid': uId
                }
            };

            let budgetResponse = await fetch(`http://localhost:8000/api/budget/${budgetIdData.id}`, budgetheaders)
            var budgetResult = await budgetResponse.json()

            budgetData = {...budgetResult}

            var shareUrl = `http://localhost:8000/budget?id=${budgetResult.id}&uid=${userData.id}&sharing=true`;
            var clipboardHTML = `
                <input type="text" value="${shareUrl}" id="share-url-field" disabled>
                <button class="btn btn-info btn-sm" onclick="copyShareUrl()">Copy text</button>
            `;

            var budgetNameHTML = `<p>${budgetResult.budget_name}</p>`;
            var budgetTotalHTML = `<h3>Total Budget: <span>₹ ${budgetResult.budget_amount}</span></h3>`;

            document.querySelector('#budget-name').innerHTML = budgetNameHTML
            document.querySelector('#budget-total').innerHTML = budgetTotalHTML 
            document.querySelector('#share-section').innerHTML = clipboardHTML

            var expenseData = await getAllExpense(budgetResult.id)

            var totalIncome = 0
            var totalExpense = 0

            expenseData.map( data => {
                totalIncome = totalIncome + data.income
                totalExpense = totalExpense + data.expense
            })

            var expenditure = ( budgetData.budget_amount + totalIncome ) - totalExpense

            if(Math.sign(expenditure) == 1){
                var totalExpenditureHTML = `<h5>Total Saving: <span style='color:rgb(41, 206, 41)'>₹ ${expenditure}</span></h5>`;
            }else{
                totalExpenditureHTML = `<h5>Total Over budget: <span style='color:red'>₹ ${expenditure}</span></h5>`;
            }

            var totalIncomesHTML = `<h5>Total Incomes: <span style='color:rgb(41, 206, 41)'>₹ ${totalIncome}</span></h5>`;
            var totalExpenseHTML = `<h5>Total Expenses: <span style='color:red'>₹ ${totalExpense}</span></h5>`;
            

            document.querySelector('#budget-income-total').innerHTML = totalIncomesHTML
            document.querySelector('#budget-expense-total').innerHTML = totalExpenseHTML
            document.querySelector('#expenditure-amount').innerHTML = totalExpenditureHTML

        }catch(err){
            console.log(err)
        }
    }

    window.onload = getUserInfo

    async function getAllExpense(budgetId){
        var expenseRequestData = {
            method: 'GET',
            headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                    'auth-token': token,
                    'uid': uId
                }
        };

        let response = await fetch(`http://localhost:8000/api/expense/${budgetId}`, expenseRequestData)
        var expenseData = await response.json()

        $('#budgetTable').DataTable({
            data: expenseData,
            order: [[3, 'desc']],
            columns:[
                // { data: "id" },
                { data: "expense_name" },
                { data: "income" },
                { data: "expense" },
                { data: "spend_date" }
            ],
            responsive: true
        })

        return expenseData
    }

    async function addIncome(){

        const income_name = document.querySelector('#formGroupIncomeNameInput').value
        const income_amount = document.querySelector('#formGroupIncomeAmountInput').value
        const income_date = document.querySelector('#formGroupIncomeDateInput').value

        try{
            var incomeData = JSON.stringify({
                "expense_name": income_name,
                "amount": income_amount,
                "spend_date": income_date,
                "budgetId": budgetData.id
            });

            var requestOptions = {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                    'auth-token': token,
                    'uid': uId
                },
                body: incomeData
            };

            await fetch("http://localhost:8000/api/expense/add-income", requestOptions)

            location.reload()
        }catch(err){
            console.log(err)
        }
    }

    async function addExpense(){

        const expense_name = document.querySelector('#formGroupExpenseNameInput').value
        const expense_amount = document.querySelector('#formGroupExpenseAmountInput').value
        const expense_date = document.querySelector('#formGroupExpenseDateInput').value

        try{
            var expenseData = JSON.stringify({
                "expense_name": expense_name,
                "amount": expense_amount,
                "spend_date": expense_date,
                "budgetId": budgetData.id
            });

            var requestOptions = {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                    'auth-token': token,
                    'uid': uId
                },
                body: expenseData
            };

            await fetch("http://localhost:8000/api/expense/add-expense", requestOptions)

            location.reload()
        }catch(err){
            console.log(err)
        }
    }

    function copyShareUrl(){
        let shareUrl = document.querySelector('#share-url-field').value
        navigator.clipboard.writeText(shareUrl)
        alert('copied')
    }
</script>